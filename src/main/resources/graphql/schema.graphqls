type Query {
    # Post Queries
    getPost(id: ID!): Post
    allPosts(page: Int, size: Int): PostPage
    searchPosts(query: String!, page: Int, size: Int): PostPage
    postsByUser(userId: String!, page: Int, size: Int): PostPage
    postByTag(tag: String!, page: Int, size: Int): PostPage

    # Comment Queries
    getAllComments(page: Int!, size: Int!): CommentPage
    getSingleComment(id: String!): Comment
    getCommentsByPost(postId: String!, page: Int!, size: Int!): CommentPage
    getCommentsByUser(userId: String!, page: Int!, size: Int!): CommentPage
}

type Mutation {
    # Post Mutations
    createPost(input: PostInput!): Post
    updatePost(id: ID!, input: PostInput!): Post
    deletePost(id: ID!): String

    # Comment Mutations
    createComment(input: CommentInput!): Comment
    updateComment(id: String!, input: CommentInput!): Comment
    deleteComment(id: String!): String
}

type Post {
    postId: ID!
    postText: String!
    postImage: String
    postLikes: Int
    postLink: String
    postTags: [String]
    postPublishDate: String
    postOwnerId: String
}

type PostPage {
    data: [Post]
    total: Int
    page: Int
    size: Int
}

input PostInput {
    postText: String!
    postImage: String
    postLikes: Int
    postLink: String
    postTags: [String]
    postOwnerId: String!
}

type Comment {
    commentId: String!
    commentMessage: String!
    commentOwnerId: String!
    commentPostId: String!
    commentPublishDate: String!
}

input CommentInput {
    commentMessage: String!
    commentOwnerId: String!
    commentPostId: String!
}

type CommentPage {
    data: [Comment!]!
    total: Int!
    page: Int!
    size: Int!
}
